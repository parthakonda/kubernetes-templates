image: docker:stable

services:
  - docker:19.03.1-dind

stages:
  - deploy_admin_frontend_DEV
  - deploy_user_frontend_DEV
  - deploy_admin_api_DEV
  - deploy_user_api_DEV
  - deploy_postgres_DEV
  - deploy_admin_frontend_QA
  - deploy_user_frontend_QA
  - deploy_admin_api_QA
  - deploy_user_api_QA
  - deploy_postgres_QA
  - deploy_admin_frontend_UAT
  - deploy_user_frontend_UAT
  - deploy_admin_api_UAT
  - deploy_user_api_UAT
  - deploy_postgres_UAT
  - deploy_admin_frontend_PROD
  - deploy_user_frontend_PROD
  - deploy_admin_api_PROD
  - deploy_user_api_PROD
  - deploy_postgres_PROD


deploy_admin_api_QA:
  stage: deploy_admin_api_QA
  when: manual
  environment:
    name: QA
  only:
  - master
  script:
    - apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    - kubectl config set-cluster $KUBE_CLUSTER --server="$KUBE_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials admin --username="$KUBE_USERNAME" --password="$KUBE_PASSWORD"
    - kubectl config set-context default --cluster=$KUBE_CLUSTER --user=admin
    - kubectl config use-context default
    - kubectl delete -f app-admin-api/kubernetes/deployment.yml --ignore-not-found -n $KUBE_NAMESPACE
    - kubectl -n $KUBE_NAMESPACE delete secret --ignore-not-found docker-registry gitlab-registry --namespace $KUBE_NAMESPACE
    - kubectl -n $KUBE_NAMESPACE create secret docker-registry gitlab-registry --docker-server="$CI_REGISTRY" --docker-username="$CI_REGISTRY_USER" --docker-password="$CI_REGISTRY_PASSWORD" --docker-email="parthasaradhi.konda@gmail.com" --namespace $KUBE_NAMESPACE
    - kubectl apply -f app-admin-api/kubernetes -n $KUBE_NAMESPACE

deploy_user_api_QA:
  stage: deploy_user_api_QA
  when: manual
  environment:
    name: QA
  only:
  - master
  script:
    - apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    - kubectl config set-cluster $KUBE_CLUSTER --server="$KUBE_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials admin --username="$KUBE_USERNAME" --password="$KUBE_PASSWORD"
    - kubectl config set-context default --cluster=$KUBE_CLUSTER --user=admin
    - kubectl config use-context default
    - kubectl delete -f app-user-api/kubernetes/deployment.yml --ignore-not-found
    - kubectl -n $KUBE_NAMESPACE delete secret --ignore-not-found docker-registry gitlab-registry --namespace $KUBE_NAMESPACE
    - kubectl -n $KUBE_NAMESPACE create secret docker-registry gitlab-registry --docker-server="$CI_REGISTRY" --docker-username="$CI_REGISTRY_USER" --docker-password="$CI_REGISTRY_PASSWORD" --docker-email="parthasaradhi.konda@gmail.com" --namespace $KUBE_NAMESPACE
    - kubectl apply -f app-user-api/kubernetes -n $KUBE_NAMESPACE

deploy_admin_frontend_QA:
  stage: deploy_admin_frontend_QA
  when: manual
  environment:
    name: QA
  only:
  - master
  script:
    - apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    - kubectl config set-cluster $KUBE_CLUSTER --server="$KUBE_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials admin --username="$KUBE_USERNAME" --password="$KUBE_PASSWORD"
    - kubectl config set-context default --cluster=$KUBE_CLUSTER --user=admin
    - kubectl config use-context default
    - kubectl delete -f app-admin-frontend/kubernetes/deployment.yml --ignore-not-found -n $KUBE_NAMESPACE
    - kubectl -n $KUBE_NAMESPACE delete secret --ignore-not-found docker-registry gitlab-registry --namespace $KUBE_NAMESPACE
    - kubectl -n $KUBE_NAMESPACE create secret docker-registry gitlab-registry --docker-server="$CI_REGISTRY" --docker-username="$CI_REGISTRY_USER" --docker-password="$CI_REGISTRY_PASSWORD" --docker-email="parthasaradhi.konda@gmail.com" --namespace $KUBE_NAMESPACE
    - kubectl apply -f app-admin-frontend/kubernetes -n $KUBE_NAMESPACE

deploy_user_frontend_QA:
  stage: deploy_user_frontend_QA
  when: manual
  environment:
    name: QA
  only:
  - master
  script:
    - apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    - kubectl config set-cluster $KUBE_CLUSTER --server="$KUBE_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials admin --username="$KUBE_USERNAME" --password="$KUBE_PASSWORD"
    - kubectl config set-context default --cluster=$KUBE_CLUSTER --user=admin
    - kubectl config use-context default
    - kubectl delete -f app-user-frontend/kubernetes/deployment.yml --ignore-not-found
    - kubectl -n $KUBE_NAMESPACE delete secret --ignore-not-found docker-registry gitlab-registry --namespace $KUBE_NAMESPACE
    - kubectl -n $KUBE_NAMESPACE create secret docker-registry gitlab-registry --docker-server="$CI_REGISTRY" --docker-username="$CI_REGISTRY_USER" --docker-password="$CI_REGISTRY_PASSWORD" --docker-email="parthasaradhi.konda@gmail.com" --namespace $KUBE_NAMESPACE
    - kubectl apply -f app-user-frontend/kubernetes -n $KUBE_NAMESPACE

deploy_postgres_QA:
  stage: deploy_postgres_QA
  when: manual
  environment:
    name: QA
  only:
  - master
  script:
    - apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    - kubectl config set-cluster $KUBE_CLUSTER --server="$KUBE_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials admin --username="$KUBE_USERNAME" --password="$KUBE_PASSWORD"
    - kubectl config set-context default --cluster=$KUBE_CLUSTER --user=admin
    - kubectl config use-context default
    - kubectl delete -f postgres/deployment.yml --ignore-not-found -n $KUBE_NAMESPACE
    - kubectl -n $KUBE_NAMESPACE delete secret --ignore-not-found docker-registry gitlab-registry --namespace $KUBE_NAMESPACE
    - kubectl -n $KUBE_NAMESPACE create secret docker-registry gitlab-registry --docker-server="$CI_REGISTRY" --docker-username="$CI_REGISTRY_USER" --docker-password="$CI_REGISTRY_PASSWORD" --docker-email="parthasaradhi.konda@gmail.com" --namespace $KUBE_NAMESPACE
    - kubectl apply -f postgres/ -n $KUBE_NAMESPACE